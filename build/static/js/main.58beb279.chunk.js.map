{"version":3,"sources":["hooks/useLocalStorage.js","api/api.js","common/LoadingSpinner.js","auth/UserContext.js","routes-nav/Navigation.js","homepage/Homepage.js","common/SearchForm.js","companies/CompanyCard.js","companies/CompanyList.js","jobs/JobCard.js","jobs/JobCardList.js","jobs/JobList.js","companies/CompanyDetail.js","common/Alert.js","auth/LoginForm.js","profiles/ProfileForm.js","auth/SignupForm.js","routes-nav/PrivateRoute.js","routes-nav/Routes.js","App.js","serviceWorker.js","index.js"],"names":["useLocalStorage","key","firstValue","arguments","length","undefined","initialValue","localStorage","getItem","_useState","useState","_useState2","_slicedToArray","item","setItem","useEffect","removeItem","JoblyApi","_classCallCheck","_createClass","value","_request","_asyncToGenerator","_regeneratorRuntime","mark","_callee","endpoint","data","method","url","headers","params","message","_args","wrap","_context","prev","next","console","debug","concat","process","Authorization","token","axios","abrupt","sent","t0","error","response","Array","isArray","stop","_x","apply","_getCurrentUser","_callee2","username","res","_context2","this","request","user","_x2","_getCompanies","_callee3","name","_context3","companies","_x3","_getCompany","_callee4","handle","_context4","company","_x4","_getJobs","_callee5","title","_context5","jobs","_x5","_applyToJob","_callee6","id","_context6","_x6","_x7","_login","_callee7","_context7","_x8","_signup","_callee8","_context8","_x9","_saveProfile","_callee9","_context9","_x10","_x11","LoadingSpinner","_jsx","className","children","UserContext","React","createContext","Navigation","_ref","logout","currentUser","useContext","_jsxs","Link","to","NavLink","onClick","first_name","Homepage","firstName","SearchForm","searchFor","searchTerm","setSearchTerm","onSubmit","evt","preventDefault","trim","placeholder","onChange","target","type","CompanyCard","description","logoUrl","src","alt","CompanyList","setCompanies","search","_search","getCompanies","map","formatSalary","salary","digitsRev","salaryStr","toString","i","push","reverse","join","JobCard","equity","companyName","_useContext","hasAppliedToJob","applyToJob","applied","setApplied","_handleApply","disabled","JobCardList","job","JobList","setJobs","getJobs","Search","CompanyDetail","useParams","setCompany","getCompany","t1","Alert","_ref$type","_ref$messages","messages","role","LoginForm","login","history","useHistory","password","formData","setFormData","_useState3","_useState4","formErrors","setFormErrors","handleSubmit","_handleSubmit","result","success","errors","handleChange","_evt$target","l","_objectSpread","_defineProperty","autoComplete","required","ProfileForm","setCurrentUser","lastName","email","_useState5","_useState6","saveConfirmed","setSaveConfirmed","profileData","updatedUser","saveProfile","f","SignupForm","signup","PrivateRoute","exact","path","Route","Redirect","Routes","Switch","App","infoLoaded","setInfoLoaded","Set","applicationIds","setApplicationIds","_useLocalStorage","_useLocalStorage2","setToken","signupData","_token","loginData","_token2","has","_jwt$decode","_currentUser","jwt","decode","getCurrentUser","applications","BrowserRouter","Provider","_toConsumableArray","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58beb279.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction useLocalStorage(key, firstValue = null) {\n    const initialValue = localStorage.getItem(key) || firstValue;\n\n    const [item, setItem] = useState(initialValue);\n\n    useEffect(function setKeyInLocalStorage() {\n        if (item === null) {\n            localStorage.removeItem(key);\n        } else {\n            localStorage.setItem(key, item);\n        }\n    }, [key, item]);\n\n    return [item, setItem];\n}\n\nexport default useLocalStorage;\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = (method === \"get\")\n      ? data\n      : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get the current user. */\n\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  /** Get companies (filtered by name if not undefined) */\n\n  static async getCompanies(name) {\n    let res = await this.request(\"companies\", { name });\n    return res.companies;\n  }\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  /** Get list of jobs (filtered by title if not undefined) */\n\n  static async getJobs(title) {\n    let res = await this.request(\"jobs\", { title });\n    return res.jobs;\n  }\n\n  /** Apply to a job */\n\n  static async applyToJob(username, id) {\n    await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n  }\n\n  /** Get token for login from username, password. */\n\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  /** Signup for site. */\n\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n\n  /** Save user profile page. */\n\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n}\n\nexport default JoblyApi;","import React from \"react\";\nimport \"./LoadingSpinner.css\";\n\nfunction LoadingSpinner() {\n    return (\n        <div className=\"LoadingSpinner\">\n            Loading ...\n        </div>\n    );\n}\n\nexport default LoadingSpinner;","import React from \"react\";\n\nconst UserContext = React.createContext();\n\nexport default UserContext;\n","import React, { useContext } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext.js\";\nimport \"./Navigation.css\";\n\nfunction Navigation({ logout }) {\n  const { currentUser } = useContext(UserContext);\n\n  function loggedInNav() {\n    return (\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/companies\">\n              Companies\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/jobs\">\n              Jobs\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/profile\">\n              Profile\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/\" onClick={logout}>\n              Log out {currentUser.first_name || currentUser.username}\n            </Link>\n          </li>\n        </ul>\n    );\n  }\n\n  function loggedOutNav() {\n    return (\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/login\">\n              Login\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link\" to=\"/signup\">\n              Sign Up\n            </NavLink>\n          </li>\n        </ul>\n    );\n  }\n\n  return (\n      <nav className=\"Navigation navbar navbar-expand-md\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Jobly\n        </Link>\n        {currentUser ? loggedInNav() : loggedOutNav()}\n      </nav>\n  );\n}\n\nexport default Navigation;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Homepage.css\";\nimport UserContext from \"../auth/UserContext.js\";\n\nfunction Homepage() {\n    const { currentUser } = useContext(UserContext);\n    return (\n        <div className=\"Homepage\">\n            <div className=\"container text-center\">\n                <h1 className=\"mb-4 font-weight-bold\">Jobly</h1>\n                <p className=\"lead\">All the jobs in one, convenient place.</p>\n                {currentUser\n                    ? <h2>\n                        Welcome Back, {currentUser.firstName || currentUser.username}!\n                    </h2>\n                    : (\n                        <p>\n                            <Link className=\"btn btn-primary font-weight-bold mr-3\"\n                                to=\"/login\">\n                                Log in\n                            </Link>\n                            <Link className=\"btn btn-primary font-weight-bold\"\n                                to=\"/signup\">\n                                Sign up\n                            </Link>\n                        </p>\n                    )}\n            </div>\n        </div>\n    );\n}\n\nexport default Homepage;\n","import React, { useState } from \"react\";\nimport \"./SearchForm.css\";\n\nfunction SearchForm({ searchFor }) {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        searchFor(searchTerm.trim() || undefined);\n        setSearchTerm(searchTerm.trim());\n    }\n\n    function handleChange(evt) {\n        setSearchTerm(evt.target.value);\n    }\n\n    return (\n        <div className=\"SearchForm mb-4\">\n            <form className=\"form-inline\" onSubmit={handleSubmit}>\n                <input\n                    className=\"form-control form-control-lg flex-grow-1\"\n                    name=\"searchTerm\"\n                    placeholder=\"Enter search term..\"\n                    value={searchTerm}\n                    onChange={handleChange}\n                />\n                <button type=\"submit\" className=\"btn btn-lg btn-primary\">\n                    Submit\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default SearchForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./CompanyCard.css\";\n\nfunction CompanyCard({ name, description, logoUrl, handle }) {\n\n    return (\n        <Link className=\"CompanyCard card\" to={`/companies/${handle}`}>\n            <div className=\"card-body\">\n                <h6 className=\"card-title\">\n                    {name}\n                    {logoUrl && <img src={logoUrl}\n                        alt={name}\n                        className=\"float-right ml-5\" />}\n                </h6>\n                <p><small>{description}</small></p>\n            </div>\n        </Link>\n    );\n}\n\nexport default CompanyCard;\n","import React, { useState, useEffect } from \"react\";\nimport SearchForm from \"../common/SearchForm.js\";\nimport JoblyApi from \"../api/api.js\";\nimport CompanyCard from \"./CompanyCard.js\";\nimport LoadingSpinner from \"../common/LoadingSpinner.js\";\n\nfunction CompanyList() {\n    const [companies, setCompanies] = useState(null);\n\n    useEffect(function getCompaniesOnMount() {\n        search();\n    }, []);\n\n    async function search(name) {\n        let companies = await JoblyApi.getCompanies(name);\n        setCompanies(companies);\n    }\n\n    if (!companies) return <LoadingSpinner />;\n\n    return (\n        <div className=\"CompanyList col-md-8 offset-md-2\">\n            <SearchForm searchFor={search} />\n            {companies.length\n                ? (\n                    <div className=\"CompanyList-list\">\n                        {companies.map(company => (\n                            <CompanyCard\n                                key={company.handle}\n                                handle={company.handle}\n                                name={company.name}\n                                description={company.description}\n                                logoUrl={company.logoUrl}\n                            />\n                        ))}\n                    </div>\n                ) : (\n                    <p className=\"lead\">Sorry, no results were found!</p>\n                )}\n        </div>\n    );\n}\n\nexport default CompanyList;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport \"./JobCard.css\";\nimport UserContext from \"../auth/UserContext.js\";\n\nfunction JobCard({ id, title, salary, equity, companyName }) {\n    const { hasAppliedToJob, applyToJob } = useContext(UserContext);\n    const [applied, setApplied] = useState();\n\n    useEffect(function updateAppliedStatus() {\n        setApplied(hasAppliedToJob(id));\n    }, [id, hasAppliedToJob]);\n\n    async function handleApply(evt) {\n        if (hasAppliedToJob(id)) return;\n        applyToJob(id);\n        setApplied(true);\n    }\n\n    return (\n        <div className=\"JobCard card\"> {applied}\n            <div className=\"card-body\">\n                <h6 className=\"card-title\">{title}</h6>\n                <p>{companyName}</p>\n                {salary && <div><small>Salary: {formatSalary(salary)}</small></div>}\n                {equity !== undefined && <div><small>Equity: {equity}</small></div>}\n                <button\n                    className=\"btn btn-danger font-weight-bold text-uppercase float-right\"\n                    onClick={handleApply}\n                    disabled={applied}\n                >\n                    {applied ? \"Applied\" : \"Apply\"}\n                </button>\n            </div>\n        </div>\n    );\n}\n\nfunction formatSalary(salary) {\n    const digitsRev = [];\n    const salaryStr = salary.toString();\n\n    for (let i = salaryStr.length - 1; i >= 0; i--) {\n        digitsRev.push(salaryStr[i]);\n        if (i > 0 && i % 3 === 0) digitsRev.push(\",\");\n    }\n\n    return digitsRev.reverse().join(\"\");\n}\n\n\nexport default JobCard;\n","import React from \"react\";\nimport JobCard from \"./JobCard.js\";\n\nfunction JobCardList({ jobs, apply }) {\n\n    return (\n        <div className=\"JobCardList\">\n            {jobs.map(job => (\n                <JobCard\n                    key={job.id}\n                    id={job.id}\n                    title={job.title}\n                    salary={job.salary}\n                    equity={job.equity}\n                    companyName={job.companyName}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default JobCardList;\n","import React, { useState, useEffect } from \"react\";\nimport Search from \"../common/SearchForm.js\";\nimport JoblyApi from \"../api/api.js\";\nimport JobCardList from \"./JobCardList.js\";\nimport LoadingSpinner from \"../common/LoadingSpinner.js\";\n\nfunction JobList() {\n    const [jobs, setJobs] = useState(null);\n\n    useEffect(function getAllJobsOnMount() {\n        search();\n    }, []);\n\n    async function search(title) {\n        let jobs = await JoblyApi.getJobs(title);\n        setJobs(jobs);\n    }\n\n    if (!jobs) return <LoadingSpinner />;\n\n    return (\n        <div className=\"JobList col-md-8 offset-md-2\">\n            <Search searchFor={search} />\n            {jobs.length\n                ? <JobCardList jobs={jobs} />\n                : <p className=\"lead\">Sorry, no results were found!</p>\n            }\n        </div>\n    );\n}\n\nexport default JobList;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport JoblyApi from \"../api/api.js\";\nimport JobCardList from \"../jobs/JobCardList.js\";\nimport LoadingSpinner from \"../common/LoadingSpinner.js\";\n\nfunction CompanyDetail() {\n    const { handle } = useParams();\n    const [company, setCompany] = useState(null);\n\n    useEffect(function getCompanyAndJobsForUser() {\n        async function getCompany() {\n            setCompany(await JoblyApi.getCompany(handle));\n        }\n\n        getCompany();\n    }, [handle]);\n\n    if (!company) return <LoadingSpinner />;\n\n    return (\n        <div className=\"CompanyDetail col-md-8 offset-md-2\">\n            <h4>{company.name}</h4>\n            <p>{company.description}</p>\n            <JobCardList jobs={company.jobs} />\n        </div>\n    );\n}\n\nexport default CompanyDetail;\n","import React from \"react\";\n\nfunction Alert({ type = \"danger\", messages = [] }) {\n    return (\n        <div className={`alert alert-${type}`} role=\"alert\">\n            {messages.map(error => (\n                <p className=\"mb-0 small\" key={error}>\n                    {error}\n                </p>\n            ))}\n        </div>\n    );\n}\n\nexport default Alert;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert.js\";\n\nfunction LoginForm({ login }) {\n    const history = useHistory();\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n    });\n    const [formErrors, setFormErrors] = useState([]);\n\n    async function handleSubmit(evt) {\n        evt.preventDefault();\n        let result = await login(formData);\n        if (result.success) {\n            history.push(\"/companies\");\n        } else {\n            setFormErrors(result.errors);\n        }\n    }\n\n    function handleChange(evt) {\n        const { name, value } = evt.target;\n        setFormData(l => ({ ...l, [name]: value }));\n    }\n\n    return (\n        <div className=\"LoginForm\">\n            <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n                <h3 className=\"mb-3\">Log In</h3>\n\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"form-group\">\n                                <label>Username</label>\n                                <input\n                                    name=\"username\"\n                                    className=\"form-control\"\n                                    value={formData.username}\n                                    onChange={handleChange}\n                                    autoComplete=\"username\"\n                                    required\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    className=\"form-control\"\n                                    value={formData.password}\n                                    onChange={handleChange}\n                                    autoComplete=\"current-password\"\n                                    required\n                                />\n                            </div>\n\n                            {formErrors.length\n                                ? <Alert type=\"danger\" messages={formErrors} />\n                                : null}\n\n                            <button\n                                className=\"btn btn-primary float-right\"\n                                onSubmit={handleSubmit}\n                            >\n                                Submit\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginForm;\n","import React, { useState, useContext } from \"react\";\nimport Alert from \"../common/Alert\";\nimport JoblyApi from \"../api/api\";\nimport UserContext from \"../auth/UserContext\";\n// import useTimedMessage from \"../hooks/useTimedMessage\";\n\nfunction ProfileForm() {\n    const { currentUser, setCurrentUser } = useContext(UserContext);\n    const [formData, setFormData] = useState({\n        firstName: currentUser.firstName,\n        lastName: currentUser.lastName,\n        email: currentUser.email,\n        username: currentUser.username,\n        password: \"\",\n    });\n    const [formErrors, setFormErrors] = useState([]);\n\n    const [saveConfirmed, setSaveConfirmed] = useState(false);\n\n    async function handleSubmit(evt) {\n        evt.preventDefault();\n\n        let profileData = {\n            firstName: formData.firstName,\n            lastName: formData.lastName,\n            email: formData.email,\n            password: formData.password,\n        };\n\n        let username = formData.username;\n        let updatedUser;\n\n        try {\n            updatedUser = await JoblyApi.saveProfile(username, profileData);\n        } catch (errors) {\n            debugger;\n            setFormErrors(errors);\n            return;\n        }\n\n        setFormData(f => ({ ...f, password: \"\" }));\n        setFormErrors([]);\n        setSaveConfirmed(true);\n\n        setCurrentUser(updatedUser);\n    }\n\n    function handleChange(evt) {\n        const { name, value } = evt.target;\n        setFormData(f => ({\n            ...f,\n            [name]: value,\n        }));\n        setFormErrors([]);\n    }\n\n    return (\n        <div className=\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\n            <h3>Profile</h3>\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <form>\n                        <div className=\"form-group\">\n                            <label>Username</label>\n                            <p className=\"form-control-plaintext\">{formData.username}</p>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>First Name</label>\n                            <input\n                                name=\"firstName\"\n                                className=\"form-control\"\n                                value={formData.firstName}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Last Name</label>\n                            <input\n                                name=\"lastName\"\n                                className=\"form-control\"\n                                value={formData.lastName}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Email</label>\n                            <input\n                                name=\"email\"\n                                className=\"form-control\"\n                                value={formData.email}\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Confirm password to make changes:</label>\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                className=\"form-control\"\n                                value={formData.password}\n                                onChange={handleChange}\n                            />\n                        </div>\n\n                        {formErrors.length\n                            ? <Alert type=\"danger\" messages={formErrors} />\n                            : null}\n\n                        {saveConfirmed\n                            ?\n                            <Alert type=\"success\" messages={[\"Updated successfully.\"]} />\n                            : null}\n\n                        <button\n                            className=\"btn btn-primary btn-block mt-4\"\n                            onClick={handleSubmit}\n                        >\n                            Save Changes\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileForm;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert.js\";\n\nfunction SignupForm({ signup }) {\n    const history = useHistory();\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n    });\n    const [formErrors, setFormErrors] = useState([]);\n\n    async function handleSubmit(evt) {\n        evt.preventDefault();\n        let result = await signup(formData);\n        if (result.success) {\n            history.push(\"/companies\");\n        } else {\n            setFormErrors(result.errors);\n        }\n    }\n\n    function handleChange(evt) {\n        const { name, value } = evt.target;\n        setFormData(data => ({ ...data, [name]: value }));\n    }\n\n    return (\n        <div className=\"SignupForm\">\n            <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n                <h2 className=\"mb-3\">Sign Up</h2>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"form-group\">\n                                <label>Username</label>\n                                <input\n                                    name=\"username\"\n                                    className=\"form-control\"\n                                    value={formData.username}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    className=\"form-control\"\n                                    value={formData.password}\n                                    onChange={handleChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>First name</label>\n                                <input\n                                    name=\"firstName\"\n                                    className=\"form-control\"\n                                    value={formData.firstName}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Last name</label>\n                                <input\n                                    name=\"lastName\"\n                                    className=\"form-control\"\n                                    value={formData.lastName}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Email</label>\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    className=\"form-control\"\n                                    value={formData.email}\n                                    onChange={handleChange}\n                                />\n                            </div>\n\n                            {formErrors.length\n                                ? <Alert type=\"danger\" messages={formErrors} />\n                                : null\n                            }\n\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary float-right\"\n                                onSubmit={handleSubmit}\n                            >\n                                Submit\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SignupForm;","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext.js\";\n\nfunction PrivateRoute({ exact, path, children }) {\n    const { currentUser } = useContext(UserContext);\n\n    if (!currentUser) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    return (\n        <Route exact={exact} path={path}>\n            {children}\n        </Route>\n    );\n}\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Homepage from \"../homepage/Homepage.js\";\nimport CompanyList from \"../companies/CompanyList.js\";\nimport JobList from \"../jobs/JobList.js\";\nimport CompanyDetail from \"../companies/CompanyDetail.js\";\nimport LoginForm from \"../auth/LoginForm.js\";\nimport ProfileForm from \"../profiles/ProfileForm.js\";\nimport SignupForm from \"../auth/SignupForm.js\";\nimport PrivateRoute from \"./PrivateRoute.js\";\n\nfunction Routes({ login, signup }) {\n    return (\n        <div className=\"pt-5\">\n            <Switch>\n                <Route exact path=\"/\">\n                    <Homepage />\n                </Route>\n                <Route exact path=\"/login\">\n                    <LoginForm login={login} />\n                </Route>\n                <Route exact path=\"/signup\">\n                    <SignupForm signup={signup} />\n                </Route>\n                <PrivateRoute exact path=\"/companies\">\n                    <CompanyList />\n                </PrivateRoute>\n                <PrivateRoute exact path=\"/jobs\">\n                    <JobList />\n                </PrivateRoute>\n                <PrivateRoute exact path=\"/companies/:handle\">\n                    <CompanyDetail />\n                </PrivateRoute>\n                <PrivateRoute path=\"/profile\">\n                    <ProfileForm />\n                </PrivateRoute>\n                <Redirect to=\"/\" />\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nimport useLocalStorage from \"./hooks/useLocalStorage.js\";\nimport JoblyApi from \"./api/api.js\";\nimport LoadingSpinner from \"./common/LoadingSpinner.js\";\nimport UserContext from \"./auth/UserContext.js\";\nimport Navigation from \"./routes-nav/Navigation.js\";\nimport Routes from \"./routes-nav/Routes.js\";\n\nexport const TOKEN_STORAGE_ID = \"jobly-token\";\n\nfunction App() {\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [applicationIds, setApplicationIds] = useState(new Set([]));\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n\n  useEffect(function loadUserInfo() {\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let { username } = jwt.decode(token);\n          JoblyApi.token = token;\n          let currentUser = await JoblyApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n          setApplicationIds(new Set(currentUser.applications));\n        } catch (err) {\n          setCurrentUser(null);\n        }\n      }\n      setInfoLoaded(true);\n    }\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n\n  async function signup(signupData) {\n    try {\n      let token = await JoblyApi.signup(signupData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      return { success: false, errors };\n    }\n  }\n\n  async function login(loginData) {\n    try {\n      let token = await JoblyApi.login(loginData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      return { success: false, errors };\n    }\n  }\n\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  function hasAppliedToJob(id) {\n    return applicationIds.has(id);\n  }\n\n  function applyToJob(id) {\n    if (hasAppliedToJob(id)) return;\n    JoblyApi.applyToJob(currentUser.username, id);\n    setApplicationIds(new Set([...applicationIds, id]));\n  }\n\n  if (!infoLoaded) return <LoadingSpinner />;\n\n  return (\n    <BrowserRouter>\n      <UserContext.Provider\n        value={{ currentUser, setCurrentUser, hasAppliedToJob, applyToJob }}>\n        <div className=\"App\">\n          <Navigation logout={logout} />\n          <Routes login={login} signup={signup} />\n        </div>\n      </UserContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}